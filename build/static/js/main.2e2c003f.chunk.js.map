{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Api/Api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInput","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchApi","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","id","webformatURL","tags","src","alt","defaultProps","Loading","color","height","width","ImageGallery","images","status","prevProps","prevState","fetchApiImages","hits","catch","message","map","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleCloseOnBackdrop","target","window","addEventListener","removeEventListener","createPortal","onClick","App","showModal","toggleModal","handleSearchImages","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e2c003f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    inputValue: '',\n  };\n\n  handleInput = e => {\n    this.setState({ inputValue: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.inputValue.trim() === '') {\n      toast.error('Введите запрос.');\n      return;\n    }\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInput}\n            value={this.state.inputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","function fetchApi(value) {\n  const ApiKey = '19996191-7ce9197af192fed24478377bf';\n\n  return fetch(\n    `https://pixabay.com/api/?q=${value}&page=1&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`There is no picture with this name: ${value}`),\n    );\n  });\n}\nconst api = {\n  fetchApi,\n};\n\nexport default api;\n","// import { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ id, webformatURL, tags }) {\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\n// export default class ImageGalleryItem extends Component {\n//   handleBigImage = e => {\n//     console.log(e.target);\n//   };\n\n//   render() {\n//     return (\n//       <li className=\"ImageGalleryItem\" key={id} onClick={this.handleBigImage}>\n//         <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n//       </li>\n//     );\n//   }\n// }\n\nImageGalleryItem.defaultProps = {\n  webformatURL: 'https://dummyimage.com/600x400/000/fff.jpg&text=empty',\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import Loader from 'react-loader-spinner';\n\nexport default function Loading() {\n  return (\n    <div>\n      <Loader\n        className=\"status\"\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n      />\n      <p className=\"status\">Loading...</p>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fetchApiImages from '../Api';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Loading from '../Loader';\n\nexport default class ImageGallery extends Component {\n  static propTypes = {\n    inputValue: PropTypes.string.isRequired,\n  };\n\n  // static defaultProps = {\n  // };\n\n  state = {\n    images: null,\n    error: null,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const value = this.props.inputValue;\n\n    if (prevProps.inputValue !== value) {\n      this.setState({ status: 'pending' });\n\n      fetchApiImages\n        .fetchApi(value)\n        .then(images =>\n          this.setState({ images: images.hits, status: 'resolved' }),\n        )\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  // handleImportState = () => {\n  //   if (this.state.images !== null) {\n  //     this.props.onSetImages(this.state.images);\n  //   }\n  // };\n\n  render() {\n    const { error, status } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <div>\n          <p className=\"status\">Введите значение искомой картинки</p>\n        </div>\n      );\n    }\n\n    if (status === 'pending') {\n      return <Loading />;\n    }\n\n    if (status === 'rejected') {\n      return (\n        <div>\n          <p className=\"status\">{error.message}</p>\n        </div>\n      );\n    }\n\n    if (status === 'resolved') {\n      // {\n      //   this.handleImportState;\n      // }\n      return (\n        <ul className=\"ImageGallery\">\n          {this.state.images.map(ImageGalleryItem)}\n        </ul>\n      );\n    }\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleCloseOnBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleCloseOnBackdrop}>\n        <div className=\"Modal\">\n          <img\n            src=\"https://pixabay.com/get/gb3750fdc7fa18848ce61e2037ce2ac7f9b3660c4e5e73992ed53ecbb669e4f55db3782bf2e91d064fba2213770b9ec0209f696d22af51146e1b58a9ce43fa4ef_1280.jpg\"\n            alt=\"\"\n          />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    inputValue: '',\n    showModal: false,\n    // images: [],\n  };\n\n  toggleModal = () => {\n    // this.setState(state => ({\n    //   showModal: !state.showModal,\n    // }));\n    // Деструктуризация:\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSearchImages = inputValue => {\n    this.setState({ inputValue });\n  };\n\n  // handleSetImages = images => {\n  //   this.setState({ images });\n  // };\n\n  render() {\n    const { inputValue, showModal } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleSearchImages} />\n        <ImageGallery\n          inputValue={inputValue}\n          // onSetImages={this.handleSetImages}\n        />\n        {showModal && <Modal onClose={this.toggleModal} />}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}